{"version":3,"sources":["components/Nav/Nav.js","components/Header/Header.js","components/SearchBar/SearchBar.js","components/Home/Home.js","components/Sub/Sub.js","components/Film/Film.js","components/Films/Films.js","components/Person/Person.js","components/People/People.js","components/Planet/Planet.js","components/Planets/Planets.js","components/Main/Main.js","components/App/App.js","index.js"],"names":["Nav","props","className","to","isActive","Header","company","SearchBar","inputSearch","createRef","btnSearch","btnState","keyword","onSubmit","ev","preventDefault","saveSearch","current","value","ref","type","name","placeholder","disabled","Home","time","active","setSearchState","nms","Array","isArray","join","useEffect","Date","toLocaleTimeString","children","Sub","defaultProps","now","Film","findFilm","useState","film","setFilm","id","useParams","details","title","release_date","Films","list","setList","url","trim","fetch","then","resp","ok","Error","statusText","json","data","results","catch","console","warn","length","map","index","path","element","found","find","item","parseInt","Person","setFound","person","setPerson","birth_year","People","Planet","findPlanet","planet","setPlanet","terrain","Planets","Main","exact","App","setKeyword","setDisabled","state","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.77d77c70.chunk.js","sourcesContent":["// import Link from '../Link/Link';\nimport { NavLink } from 'react-router-dom';\nimport './nav.css';\n\nexport default function Nav(props) {\n  return (\n    <nav className=\"mainnav\">\n      <NavLink to=\"/films\" className={({ isActive }) => isActive ? \"activeLink\" : \"\"}>\n        Films\n      </NavLink>\n      <NavLink to=\"/people\" className={({ isActive }) => isActive ? \"activeLink\" : \"\"}>\n        People\n      </NavLink>\n      <NavLink to=\"/planets\" className={({ isActive }) => isActive ? \"activeLink\" : \"\"}>\n        Planets\n      </NavLink>\n    </nav>\n  );\n}\n","import './header.css';\nimport Nav from '../Nav/Nav';\nimport { Link } from 'react-router-dom';\n\nexport default function Header(props) {\n  return (\n    <header className=\"masthead\">\n      <h1>\n        <Link to=\"/\">{props.company}</Link>\n      </h1>\n      <Nav />\n    </header>\n  );\n}\n","import './searchbar.css';\nimport { createRef } from 'react';\n\nexport default function SearchBar(props) {\n  let inputSearch = createRef();\n  let btnSearch = createRef();\n  const {btnState, keyword} = props;\n\n  function submitted(ev) {\n    ev.preventDefault();\n    props.saveSearch(inputSearch.current.value);\n    inputSearch.current.value = \"\";\n  }\n\n  return (\n    <section className=\"searchBar\">\n      <form onSubmit={submitted}>\n        <input\n          ref={inputSearch}\n          type=\"text\"\n          name=\"keyword\"\n          className=\"searchText\"\n          placeholder=\"keyword\"\n          disabled={btnState}\n        />\n        <button\n          ref={btnSearch}\n          type=\"submit\"\n          className=\"searchBtn\"\n          name=\"searchBtn\"\n          disabled={btnState}>\n          Search\n        </button>\n      </form>\n      {keyword && <p className=\"margin-0\">You searched for <strong>{keyword}</strong></p>}\n    </section>\n  );\n}\n","import { PropTypes } from 'prop-types';\nimport { useEffect } from 'react';\n\nexport default function Home(props) {\n  const { name, time, active, setSearchState } = props;\n\n  let nms = Array.isArray(name) ? name.join(' and ') : name;\n\n  useEffect(() => {\n    setSearchState(true);\n  })\n\n  return (\n    <div>\n      <h2>Welcome {nms} to the Home page</h2>\n      <p>The time is {new Date(time).toLocaleTimeString()}</p>\n      <p>The component is {active ? 'active' : 'NOT active'}</p>\n      {props.children}\n    </div>\n  );\n}\nHome.defaultProps = {\n  time: Date.now(),\n};\nHome.propTypes = {\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.array]).isRequired,\n  time: PropTypes.number,\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n","export default function Sub() {\n  return (\n    <section>\n      <p>Just a section to insert inside Home.</p>\n    </section>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function Film({ findFilm }) {\n  const [film, setFilm] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setFilm(findFilm(id));\n  }, [findFilm, id]);\n\n  let details = (\n    <>\n      <p>{film && film.title}</p>\n      <p>{film && film.release_date}</p>\n    </>\n  );\n\n  return (\n    <>\n      <h2>Film Details</h2>\n      {film && details}\n    </>\n  );\n}\n","import { Route, NavLink, Routes } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Film from '../Film/Film';\nimport './films.css';\n\nexport default function Films(props) {\n  const [list, setList] = useState([]);\n  const {keyword, setSearchState} = props;\n\n  useEffect(() => {\n    let url = 'https://swapi.dev/api/films/';\n    if(keyword.trim() !== \"\") {\n      url += `?search=${keyword}`;\n    }\n    fetch(url)\n      .then((resp) => {\n        if (!resp.ok) throw new Error(resp.statusText);\n        return resp.json();\n      })\n      .then((data) => {\n        setList(data.results);\n      })\n      .catch(console.warn);\n  }, [keyword]);\n\n  useEffect(() => {\n    setSearchState(false);\n  })\n\n  function findFilm(id) {\n    const found = list.find((item, index) => parseInt(id) === index + 1);\n    if(found) {\n      return found;\n    }\n    return null;\n  }\n  return (\n    <>\n      <div className=\"results\">\n        <h2>Film List</h2>\n\n        {list.length === 0 && <p>No films...</p>}\n        {list.map((film, index) => (\n          <p key={film.title}>\n            <NavLink className={({ isActive }) => isActive ? \"activeLink\" : \"\"} to={`/films/${index + 1}`}>\n              {film.title}\n            </NavLink>\n          </p>\n        ))}\n      </div>\n      <div className=\"details\">\n        <Routes>\n          <Route path=\":id\" element={<Film findFilm={findFilm} />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nexport default function Person({ list }) {\n  const [found, setFound] = useState(false);\n  const [person, setPerson] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    let person = list.find((item, index) => parseInt(id) === index + 1);\n    if(person) {\n      setPerson(person);\n      setFound(true);\n    }\n  },[found, id, list])\n\n  return (\n    <div>\n    {found &&\n      <div>\n        <h2>Person Details {id}</h2>\n        {person && <p>{person.name}</p>}\n        {person && <p>{person.birth_year}</p>}\n      </div>\n    }\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { NavLink, Routes, Route } from 'react-router-dom';\nimport Person from '../Person/Person';\nimport './people.css';\n\nexport default function People(props) {\n  const [list, setList] = useState([]);\n  const {keyword, setSearchState} = props;\n\n  useEffect(() => {\n    let url = 'https://swapi.dev/api/people/';\n    if(keyword.trim() !== \"\") {\n      url += `?search=${keyword}`;\n    }\n    fetch(url)\n      .then((resp) => {\n        if (!resp.ok) throw new Error(resp.statusText);\n        return resp.json();\n      })\n      .then((data) => {\n        setList(data.results);\n      })\n      .catch(console.warn);\n  }, [keyword]);\n\n  useEffect(() => {\n    setSearchState(false);\n  })\n\n  return (\n    <>\n    <div className=\"results\">\n      <h2>People List</h2>\n      {list.length === 0 && <p>No people...</p>}\n      {list.length > 0 && list.map((item, index) => (\n        <p key={item.name}>\n          <NavLink className={({ isActive }) => isActive ? \"activeLink\" : \"\"} to={`/people/${index + 1}`}>\n            {item.name}\n          </NavLink>\n        </p>\n      ))}\n    </div>\n      <div className=\"details\">\n        <Routes>\n          <Route path=\":id\" element={<Person list={list} />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function Planet({ findPlanet }) {\n  const [planet, setPlanet] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setPlanet(findPlanet(id));\n  }, [findPlanet, id]);\n\n  let details = (\n    <>\n      <p>{planet && planet.name}</p>\n      <p>{planet && planet.terrain}</p>\n    </>\n  );\n\n  return (\n    <>\n      <h2>Planet Details</h2>\n      {planet && planet.name === 'Alderaan' ? 'Too soon.' : details}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { Route, NavLink, Routes } from 'react-router-dom';\nimport Planet from '../Planet/Planet';\nimport './planets.css';\n\nexport default function Planets(props) {\n  const [list, setList] = useState([]);\n  const {keyword, setSearchState} = props;\n\n  useEffect(() => {\n    let url = 'https://swapi.dev/api/planets/';\n    if(keyword.trim() !== \"\") {\n      url += `?search=${keyword}`;\n    }\n    fetch(url)\n      .then((resp) => {\n        if (!resp.ok) throw new Error(resp.statusText);\n        return resp.json();\n      })\n      .then((data) => {\n        setList(data.results);\n      })\n      .catch(console.warn);\n  }, [keyword]);\n\n  useEffect(() => {\n    setSearchState(false);\n  })\n\n  function findPlanet(id) {\n    const found = list.find((item, index) => parseInt(id) === index + 1);\n    if(found) {\n      return found;\n    }\n    return null;\n  }\n  return (\n    <>\n      <div className=\"results\">\n        <h2>Planet List</h2>\n\n        {list.length === 0 && <p>No planets...</p>}\n        {list.length > 0 && list.map((planet, index) => (\n          <p key={planet.name}>\n            <NavLink className={({ isActive }) => isActive ? \"activeLink\" : \"\"} to={`/planets/${index + 1}`}>\n              {planet.name}\n            </NavLink>\n          </p>\n        ))}\n      </div>\n      <div className=\"details\">\n        <Routes>\n          <Route path=\":id\" element={<Planet findPlanet={findPlanet} />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n","import './main.css';\nimport Home from '../Home/Home';\nimport Sub from '../Sub/Sub';\nimport Films from '../Films/Films';\nimport People from '../People/People';\nimport Planets from '../Planets/Planets';\nimport { Route, Routes } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nexport default function Main(props) {\n  const {keyword} = props;\n  const {setSearchState} = props;\n\n  useEffect(() => {\n\n  }, [keyword])\n\n  return (\n    <div className=\"mainContent\">\n      <Routes>\n        <Route path=\"/films/*\" element={<Films keyword={keyword} setSearchState={setSearchState} />} />\n        <Route path=\"/planets/*\" element={<Planets keyword={keyword} setSearchState={setSearchState} />} />\n        <Route path=\"/people/*\" element={<People keyword={keyword} setSearchState={setSearchState} />} />\n\n        <Route\n          exact\n          path=\"/\"\n          element={<Home name={['C-3PO', 'R2-D2']} active={true} time={new Date() - 50000000} setSearchState={setSearchState}>\n                <Sub />\n                <Sub />\n              </Home>} />\n      </Routes>\n    </div>\n  );\n}\n","import './App.css';\nimport { useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Main from '../Main/Main';\n\nexport default function App(props) {\n  const name = 'Star Wars API';\n  const [keyword, setKeyword] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n\n  function saveSearch(keyword) {\n    setKeyword(keyword);\n  }\n\n  function setSearchState(state) {\n    setDisabled(state);\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header company={name} />\n        <SearchBar keyword={keyword} saveSearch={saveSearch} btnState={disabled} />\n\n        <main className=\"content\">\n          <Main keyword={keyword} setSearchState={setSearchState} />\n        </main>\n      </Router>\n    </div>\n  );\n}\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './components/App/App';\n\nconst root = createRoot(\n  document.getElementById('root')\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}