{"version":3,"sources":["components/Films/Films.js"],"names":["Films","props","Film","lazy","useFav","favFilm","list","setSearchState","useEffect","className","length","map","film","index","isActive","to","title","type","parseInt","id","path","element","findFilm","found","find","item"],"mappings":"gPAKe,SAASA,EAAMC,GAC5B,IAAMC,EAAOC,gBAAK,kBAAM,gCADW,EAEdC,cAAdC,EAF4B,oBAG3BC,EAAyBL,EAAzBK,KAAMC,EAAmBN,EAAnBM,eAgBd,OAdAC,qBAAU,cAAU,CAACF,IAErBE,qBAAU,WACRD,GAAe,MAYf,qCACE,sBAAKE,UAAU,UAAf,UACE,2CACiB,IAAhBH,EAAKI,QAAgB,4CACrBJ,EAAKK,KAAI,SAACC,EAAMC,GAAP,OACR,4BACE,eAAC,IAAD,CACEJ,UAAW,qBAAGK,SAA2B,aAAe,IACxDC,GAAE,iBAAYF,EAAQ,GAFxB,UAIGD,EAAKI,MAJR,OAKoB,UAAjBX,EAAQY,MAAoBJ,EAAQ,IAAMK,SAASb,EAAQc,KAC1D,mCACE,sBAAMV,UAAU,qCAAhB,4BARAG,EAAKI,aAiBjB,qBAAKP,UAAU,UAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEW,KAAK,MACLC,QACE,cAAC,WAAD,UACE,cAACnB,EAAD,CAAMoB,SArCpB,SAAkBH,GAChB,IAAMI,EAAQjB,EAAKkB,MAAK,SAACC,EAAMZ,GAAP,OAAiBK,SAASC,KAAQN,EAAQ,KAClE,OAAIU,GAGG","file":"static/js/3.fcd8216a.chunk.js","sourcesContent":["import { useEffect, lazy, Suspense } from \"react\";\nimport { NavLink, Routes, Route } from \"react-router-dom\";\nimport { useFav } from \"../../context/FavContext\";\nimport \"./films.css\";\n\nexport default function Films(props) {\n  const Film = lazy(() => import(\"../Film/Film\"));\n  const [favFilm, ,] = useFav();\n  const { list, setSearchState } = props;\n\n  useEffect(() => {}, [list]);\n\n  useEffect(() => {\n    setSearchState(false);\n  });\n\n  function findFilm(id) {\n    const found = list.find((item, index) => parseInt(id) === index + 1);\n    if (found) {\n      return found;\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"results\">\n        <h2>Film List</h2>\n        {list.length === 0 && <p>No films...</p>}\n        {list.map((film, index) => (\n          <p key={film.title}>\n            <NavLink\n              className={({ isActive }) => (isActive ? \"activeLink\" : \"\")}\n              to={`/films/${index + 1}`}\n            >\n              {film.title}&nbsp;\n              {favFilm.type === \"films\" && index + 1 === parseInt(favFilm.id) && (\n                <>\n                  <span className=\"material-icons small-font red-font\">\n                    favorite\n                  </span>\n                </>\n              )}\n            </NavLink>\n          </p>\n        ))}\n      </div>\n      <div className=\"details\">\n        <Routes>\n          <Route\n            path=\":id\"\n            element={\n              <Suspense>\n                <Film findFilm={findFilm} />\n              </Suspense>\n            }\n          />\n        </Routes>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}