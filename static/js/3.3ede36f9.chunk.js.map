{"version":3,"sources":["components/Film/Film.js","components/Films/Films.js"],"names":["Film","findFilm","useState","film","setFilm","id","useParams","useFav","fav","updateFav","useEffect","details","title","release_date","onClick","ev","parseInt","type","className","Films","props","list","setSearchState","length","map","index","isActive","to","path","element","found","find","item"],"mappings":"wOAIe,SAASA,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SAAY,EACjBC,mBAAS,MADQ,mBAClCC,EADkC,KAC5BC,EAD4B,KAEjCC,EAAOC,cAAPD,GAFiC,EAGhBE,cAHgB,mBAGlCC,EAHkC,KAG7BC,EAH6B,KAczCC,qBAAU,WACRN,EAAQH,EAASI,MAChB,CAACJ,EAAUI,IAEd,IAAIM,EACF,qCACE,4BAAIR,GAAQA,EAAKS,QACjB,4BAAIT,GAAQA,EAAKU,kBAIrB,OACE,qCACE,8CACCF,EACD,4BACE,yBAAQG,QAzBd,SAAoBC,GACdP,EAAIH,KAAOW,SAASX,IAAoB,UAAbG,EAAIS,KAKnCR,EAAU,QAASO,SAASX,GAAKF,GAH/BM,EAAU,GAAI,EAAG,KAsBf,iBACM,sBAAMS,UAAU,4BAAhB,8B,MC7BC,SAASC,EAAMC,GAAQ,IAAD,EACrBb,cAAPC,EAD4B,oBAE3Ba,EAAyBD,EAAzBC,KAAMC,EAAmBF,EAAnBE,eAgBd,OAdAZ,qBAAU,cAAU,CAACW,IAErBX,qBAAU,WACRY,GAAe,MAYf,qCACE,sBAAKJ,UAAU,UAAf,UACE,2CACiB,IAAhBG,EAAKE,QAAgB,4CACrBF,EAAKG,KAAI,SAACrB,EAAMsB,GAAP,OACR,4BACE,eAAC,IAAD,CACEP,UAAW,qBAAGQ,SAA2B,aAAe,IACxDC,GAAE,iBAAYF,EAAQ,GAFxB,UAIGtB,EAAKS,MAJR,OAKgB,UAAbJ,EAAIS,MAAoBQ,EAAQ,IAAMT,SAASR,EAAIH,KAClD,mCACE,sBAAMa,UAAU,4BAAhB,4BARAf,EAAKS,aAejB,qBAAKM,UAAU,UAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOU,KAAK,MAAMC,QAAS,cAAC7B,EAAD,CAAMC,SA/BzC,SAAkBI,GAChB,IAAMyB,EAAQT,EAAKU,MAAK,SAACC,EAAMP,GAAP,OAAiBT,SAASX,KAAQoB,EAAQ,KAClE,OAAIK,GAGG","file":"static/js/3.3ede36f9.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useFav } from \"../../context/FavContext\";\n\nexport default function Film({ findFilm }) {\n  const [film, setFilm] = useState(null);\n  const { id } = useParams();\n  const [fav, updateFav] = useFav();\n\n  function favClicked(ev) {\n    if (fav.id === parseInt(id) && fav.type === \"films\") {\n      //clear fav\n      updateFav(\"\", 0, {});\n      return;\n    }\n    updateFav(\"films\", parseInt(id), film);\n  }\n\n  useEffect(() => {\n    setFilm(findFilm(id));\n  }, [findFilm, id]);\n\n  let details = (\n    <>\n      <p>{film && film.title}</p>\n      <p>{film && film.release_date}</p>\n    </>\n  );\n\n  return (\n    <>\n      <h2>Film Details</h2>\n      {details}\n      <p>\n        <button onClick={favClicked}>\n          Set <span className=\"material-icons small-font\">favorite</span>\n        </button>\n      </p>\n    </>\n  );\n}\n","import { Route, NavLink, Routes } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useFav } from \"../../context/FavContext\";\nimport Film from \"../Film/Film\";\nimport \"./films.css\";\n\nexport default function Films(props) {\n  const [fav] = useFav();\n  const { list, setSearchState } = props;\n\n  useEffect(() => {}, [list]);\n\n  useEffect(() => {\n    setSearchState(false);\n  });\n\n  function findFilm(id) {\n    const found = list.find((item, index) => parseInt(id) === index + 1);\n    if (found) {\n      return found;\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"results\">\n        <h2>Film List</h2>\n        {list.length === 0 && <p>No films...</p>}\n        {list.map((film, index) => (\n          <p key={film.title}>\n            <NavLink\n              className={({ isActive }) => (isActive ? \"activeLink\" : \"\")}\n              to={`/films/${index + 1}`}\n            >\n              {film.title}&nbsp;\n              {fav.type === \"films\" && index + 1 === parseInt(fav.id) && (\n                <>\n                  <span className=\"material-icons small-font\">favorite</span>\n                </>\n              )}\n            </NavLink>\n          </p>\n        ))}\n      </div>\n      <div className=\"details\">\n        <Routes>\n          <Route path=\":id\" element={<Film findFilm={findFilm} />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}