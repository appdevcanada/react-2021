{"version":3,"sources":["components/Person/Person.js","components/People/People.js"],"names":["Person","findPerson","useState","person","setPerson","id","useParams","useFav","fav","updateFav","useEffect","name","birth_year","onClick","ev","parseInt","type","className","People","props","list","setSearchState","length","map","item","index","isActive","to","path","element","found","find"],"mappings":"wOAIe,SAASA,EAAT,GAAiC,IAAfC,EAAc,EAAdA,WAAc,EACjBC,mBAAS,MADQ,mBACtCC,EADsC,KAC9BC,EAD8B,KAErCC,EAAOC,cAAPD,GAFqC,EAGpBE,cAHoB,mBAGtCC,EAHsC,KAGjCC,EAHiC,KAkB7C,OAJAC,qBAAU,WACRN,EAAUH,EAAWI,MACpB,CAACJ,EAAYI,IAGd,gCACE,iDAAoBA,KACnBF,GAAU,4BAAIA,EAAOQ,OACrBR,GAAU,4BAAIA,EAAOS,aACtB,4BACE,yBAAQC,QAnBd,SAAoBC,GACdN,EAAIH,KAAOU,SAASV,IAAoB,WAAbG,EAAIQ,KAKnCP,EAAU,SAAUM,SAASV,GAAKF,GAHhCM,EAAU,GAAI,EAAG,KAgBf,iBACM,sBAAMQ,UAAU,4BAAhB,8B,MCvBC,SAASC,EAAOC,GAAQ,IAAD,EACtBZ,cAAPC,EAD6B,oBAE5BY,EAAyBD,EAAzBC,KAAMC,EAAmBF,EAAnBE,eAgBd,OAdAX,qBAAU,cAAU,CAACU,IAErBV,qBAAU,WACRW,GAAe,MAYf,qCACE,sBAAKJ,UAAU,UAAf,UACE,6CACiB,IAAhBG,EAAKE,QAAgB,6CACrBF,EAAKE,OAAS,GACbF,EAAKG,KAAI,SAACC,EAAMC,GAAP,OACP,4BACE,eAAC,IAAD,CACER,UAAW,qBAAGS,SAA2B,aAAe,IACxDC,GAAE,kBAAaF,EAAQ,GAFzB,UAIGD,EAAKb,KAJR,OAKgB,WAAbH,EAAIQ,MAAqBS,EAAQ,IAAMV,SAASP,EAAIH,KACnD,mCACE,sBAAMY,UAAU,4BAAhB,4BARAO,EAAKb,YAenB,qBAAKM,UAAU,UAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOW,KAAK,MAAMC,QAAS,cAAC7B,EAAD,CAAQC,WAhC3C,SAAoBI,GAClB,IAAMyB,EAAQV,EAAKW,MAAK,SAACP,EAAMC,GAAP,OAAiBV,SAASV,KAAQoB,EAAQ,KAClE,OAAIK,GAGG","file":"static/js/4.826ab5f4.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useFav } from \"../../context/FavContext\";\n\nexport default function Person({ findPerson }) {\n  const [person, setPerson] = useState(null);\n  const { id } = useParams();\n  const [fav, updateFav] = useFav();\n\n  function favClicked(ev) {\n    if (fav.id === parseInt(id) && fav.type === \"people\") {\n      //clear fav\n      updateFav(\"\", 0, {});\n      return;\n    }\n    updateFav(\"people\", parseInt(id), person);\n  }\n\n  useEffect(() => {\n    setPerson(findPerson(id));\n  }, [findPerson, id]);\n\n  return (\n    <div>\n      <h2>Person Details {id}</h2>\n      {person && <p>{person.name}</p>}\n      {person && <p>{person.birth_year}</p>}\n      <p>\n        <button onClick={favClicked}>\n          Set <span className=\"material-icons small-font\">favorite</span>\n        </button>\n      </p>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport { NavLink, Routes, Route } from \"react-router-dom\";\nimport { useFav } from \"../../context/FavContext\";\nimport Person from \"../Person/Person\";\nimport \"./people.css\";\n\nexport default function People(props) {\n  const [fav] = useFav();\n  const { list, setSearchState } = props;\n\n  useEffect(() => {}, [list]);\n\n  useEffect(() => {\n    setSearchState(false);\n  });\n\n  function findPerson(id) {\n    const found = list.find((item, index) => parseInt(id) === index + 1);\n    if (found) {\n      return found;\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"results\">\n        <h2>People List</h2>\n        {list.length === 0 && <p>No people...</p>}\n        {list.length > 0 &&\n          list.map((item, index) => (\n            <p key={item.name}>\n              <NavLink\n                className={({ isActive }) => (isActive ? \"activeLink\" : \"\")}\n                to={`/people/${index + 1}`}\n              >\n                {item.name}&nbsp;\n                {fav.type === \"people\" && index + 1 === parseInt(fav.id) && (\n                  <>\n                    <span className=\"material-icons small-font\">favorite</span>\n                  </>\n                )}\n              </NavLink>\n            </p>\n          ))}\n      </div>\n      <div className=\"details\">\n        <Routes>\n          <Route path=\":id\" element={<Person findPerson={findPerson} />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}