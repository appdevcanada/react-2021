{"version":3,"sources":["components/People/People.js"],"names":["People","props","Person","lazy","useFav","fav","list","setSearchState","useEffect","className","length","map","item","index","isActive","to","name","type","parseInt","id","path","element","findPerson","found","find"],"mappings":"gPAKe,SAASA,EAAOC,GAC7B,IAAMC,EAASC,gBAAK,kBAAM,gCADU,EAEtBC,cAAPC,EAF6B,oBAG5BC,EAAyBL,EAAzBK,KAAMC,EAAmBN,EAAnBM,eAgBd,OAdAC,qBAAU,cAAU,CAACF,IAErBE,qBAAU,WACRD,GAAe,MAYf,qCACE,sBAAKE,UAAU,UAAf,UACE,6CACiB,IAAhBH,EAAKI,QAAgB,6CACrBJ,EAAKI,OAAS,GACbJ,EAAKK,KAAI,SAACC,EAAMC,GAAP,OACP,4BACE,eAAC,IAAD,CACEJ,UAAW,qBAAGK,SAA2B,aAAe,IACxDC,GAAE,kBAAaF,EAAQ,GAFzB,UAIGD,EAAKI,KAJR,OAKgB,WAAbX,EAAIY,MAAqBJ,EAAQ,IAAMK,SAASb,EAAIc,KACnD,mCACE,sBAAMV,UAAU,4BAAhB,4BARAG,EAAKI,YAenB,qBAAKP,UAAU,UAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEW,KAAK,MACLC,QACE,cAAC,WAAD,UACE,cAACnB,EAAD,CAAQoB,WApCtB,SAAoBH,GAClB,IAAMI,EAAQjB,EAAKkB,MAAK,SAACZ,EAAMC,GAAP,OAAiBK,SAASC,KAAQN,EAAQ,KAClE,OAAIU,GAGG","file":"static/js/4.12204068.chunk.js","sourcesContent":["import { useEffect, lazy, Suspense } from \"react\";\nimport { NavLink, Routes, Route } from \"react-router-dom\";\nimport { useFav } from \"../../context/FavContext\";\nimport \"./people.css\";\n\nexport default function People(props) {\n  const Person = lazy(() => import(\"../Person/Person\"));\n  const [fav] = useFav();\n  const { list, setSearchState } = props;\n\n  useEffect(() => {}, [list]);\n\n  useEffect(() => {\n    setSearchState(false);\n  });\n\n  function findPerson(id) {\n    const found = list.find((item, index) => parseInt(id) === index + 1);\n    if (found) {\n      return found;\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"results\">\n        <h2>People List</h2>\n        {list.length === 0 && <p>No people...</p>}\n        {list.length > 0 &&\n          list.map((item, index) => (\n            <p key={item.name}>\n              <NavLink\n                className={({ isActive }) => (isActive ? \"activeLink\" : \"\")}\n                to={`/people/${index + 1}`}\n              >\n                {item.name}&nbsp;\n                {fav.type === \"people\" && index + 1 === parseInt(fav.id) && (\n                  <>\n                    <span className=\"material-icons small-font\">favorite</span>\n                  </>\n                )}\n              </NavLink>\n            </p>\n          ))}\n      </div>\n      <div className=\"details\">\n        <Routes>\n          <Route\n            path=\":id\"\n            element={\n              <Suspense>\n                <Person findPerson={findPerson} />\n              </Suspense>\n            }\n          />\n        </Routes>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}