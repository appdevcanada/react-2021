{"version":3,"sources":["components/Nav/Nav.js","components/Header/Header.js","components/SearchBar/SearchBar.js","components/Home/Home.js","components/Sub/Sub.js","context/FavContext.js","components/Film/Film.js","components/Spinner/Spinner.js","components/Films/Films.js","components/Person/Person.js","components/People/People.js","components/Planet/Planet.js","components/Planets/Planets.js","components/Main/Main.js","components/App/App.js","index.js"],"names":["Nav","props","className","to","isActive","Header","company","SearchBar","inputSearch","createRef","btnSearch","btnState","keyword","onSubmit","ev","preventDefault","saveSearch","current","value","ref","type","name","placeholder","disabled","Home","time","active","setSearchState","nms","Array","isArray","join","useEffect","Date","toLocaleTimeString","children","Sub","defaultProps","now","FavContext","createContext","FavProvider","useState","id","data","fav","setFav","Provider","useFav","context","useContext","Error","Film","findFilm","film","setFilm","useParams","updateFav","details","title","release_date","onClick","parseInt","Spinner","Films","list","loaded","setLoaded","setTimeout","length","map","index","path","element","found","find","item","Person","findPerson","person","setPerson","birth_year","People","Planet","findPlanet","planet","setPlanet","terrain","Planets","Main","pathname","useLocation","films","setFilms","people","setPeople","planets","setPlanets","a","url","trim","axios","get","then","resp","results","catch","console","error","exact","App","setKeyword","setDisabled","state","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.014802d3.chunk.js","sourcesContent":["// import Link from '../Link/Link';\nimport { NavLink } from 'react-router-dom';\nimport './nav.css';\n\nexport default function Nav(props) {\n  return (\n    <nav className=\"mainnav\">\n      <NavLink to=\"/films\" className={({ isActive }) => isActive ? \"activeLink\" : \"\"}>\n        Films\n      </NavLink>\n      <NavLink to=\"/people\" className={({ isActive }) => isActive ? \"activeLink\" : \"\"}>\n        People\n      </NavLink>\n      <NavLink to=\"/planets\" className={({ isActive }) => isActive ? \"activeLink\" : \"\"}>\n        Planets\n      </NavLink>\n    </nav>\n  );\n}\n","import './header.css';\nimport Nav from '../Nav/Nav';\nimport { Link } from 'react-router-dom';\n\nexport default function Header(props) {\n  return (\n    <header className=\"masthead\">\n      <h1>\n        <Link to=\"/\">{props.company}</Link>\n      </h1>\n      <Nav />\n    </header>\n  );\n}\n","import './searchbar.css';\nimport { createRef } from 'react';\n\nexport default function SearchBar(props) {\n  let inputSearch = createRef();\n  let btnSearch = createRef();\n  const {btnState, keyword} = props;\n\n  function submitted(ev) {\n    ev.preventDefault();\n    props.saveSearch(inputSearch.current.value);\n    inputSearch.current.value = \"\";\n  }\n\n  return (\n    <section className=\"searchBar\">\n      <form onSubmit={submitted}>\n        <input\n          ref={inputSearch}\n          type=\"text\"\n          name=\"keyword\"\n          className=\"searchText\"\n          placeholder=\"keyword\"\n          disabled={btnState}\n        />\n        <button\n          ref={btnSearch}\n          type=\"submit\"\n          className=\"searchBtn\"\n          name=\"searchBtn\"\n          disabled={btnState}>\n          Search\n        </button>\n      </form>\n      {keyword && <p className=\"margin-0\">You searched for <strong>{keyword}</strong></p>}\n    </section>\n  );\n}\n","import { PropTypes } from 'prop-types';\nimport { useEffect } from 'react';\n\nexport default function Home(props) {\n  const { name, time, active, setSearchState } = props;\n\n  let nms = Array.isArray(name) ? name.join(' and ') : name;\n\n  useEffect(() => {\n    setSearchState(true);\n  })\n\n  return (\n    <div>\n      <h2>Welcome {nms} to the Home page</h2>\n      <p>The time is {new Date(time).toLocaleTimeString()}</p>\n      <p>The component is {active ? 'active' : 'NOT active'}</p>\n      {props.children}\n    </div>\n  );\n}\nHome.defaultProps = {\n  time: Date.now(),\n};\nHome.propTypes = {\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.array]).isRequired,\n  time: PropTypes.number,\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n","export default function Sub() {\n  return (\n    <section>\n      <p>Just a section to insert inside Home.</p>\n    </section>\n  );\n}\n","import { useState, useContext, createContext } from 'react';\n\nconst FavContext = createContext();\n\nfunction FavProvider(props) {\n  const shape = {\n    type: '',\n    id: 0,\n    data: {}\n  }\n  const [fav, setFav] = useState(shape);\n\n  function updateFav(type, id, data) {\n    setFav({\n      type,\n      id,\n      data\n    });\n  }\n\n  return <FavContext.Provider value={[fav, updateFav]} {...props} />\n}\n\nfunction useFav() {\n  const context = useContext(FavContext);\n  if (!context) throw new Error('No context available!');\n\n  return context;\n}\n\nexport { FavProvider, useFav };","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useFav } from \"../../context/FavContext\";\n\nexport default function Film({ findFilm }) {\n  const [film, setFilm] = useState(null);\n  const { id } = useParams();\n  const [fav, updateFav] = useFav();\n\n  function favClicked(ev) {\n    if (fav.id === parseInt(id) && fav.type === \"films\") {\n      //clear fav\n      updateFav(\"\", 0, {});\n      return;\n    }\n    updateFav(\"films\", parseInt(id), film);\n  }\n\n  useEffect(() => {\n    setFilm(findFilm(id));\n  }, [findFilm, id]);\n\n  let details = (\n    <>\n      <p>{film && film.title}</p>\n      <p>{film && film.release_date}</p>\n    </>\n  );\n\n  return (\n    <>\n      <h2>Film Details</h2>\n      {details}\n      <p>\n        <button onClick={favClicked}>\n          Set <span className=\"material-icons small-font\">favorite</span>\n        </button>\n      </p>\n    </>\n  );\n}\n","import \"./spinner.css\";\n\nexport default function Spinner(props) {\n  return (\n    <div className=\"overlay\">\n      <div className=\"spinner\">{props.children}</div>\n    </div>\n  );\n}\n","import { Route, NavLink, Routes } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport Film from \"../Film/Film\";\nimport Spinner from \"../Spinner/Spinner\";\nimport { useFav } from \"../../context/FavContext\";\nimport \"./films.css\";\n\nexport default function Films(props) {\n  const [fav] = useFav();\n  const { list, setSearchState } = props;\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    setTimeout(setLoaded, 800, true);\n  }, [list]);\n\n  useEffect(() => {\n    setSearchState(false);\n  });\n\n  function findFilm(id) {\n    const found = list.find((item, index) => parseInt(id) === index + 1);\n    if (found) {\n      return found;\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"results\">\n        <h2>Film List</h2>\n        {!loaded && <Spinner>Loading...</Spinner>}\n        {list.length === 0 && <p>No films...</p>}\n        {list.map((film, index) => (\n          <p key={film.title}>\n            <NavLink\n              className={({ isActive }) => (isActive ? \"activeLink\" : \"\")}\n              to={`/films/${index + 1}`}\n            >\n              {film.title}&nbsp;\n              {fav.type === \"films\" && index + 1 === parseInt(fav.id) && (\n                <>\n                  <span className=\"material-icons small-font\">favorite</span>\n                </>\n              )}\n            </NavLink>\n          </p>\n        ))}\n      </div>\n      <div className=\"details\">\n        <Routes>\n          <Route path=\":id\" element={<Film findFilm={findFilm} />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useFav } from \"../../context/FavContext\";\n\nexport default function Person({ findPerson }) {\n  const [person, setPerson] = useState(null);\n  const { id } = useParams();\n  const [fav, updateFav] = useFav();\n\n  function favClicked(ev) {\n    if (fav.id === parseInt(id) && fav.type === \"people\") {\n      //clear fav\n      updateFav(\"\", 0, {});\n      return;\n    }\n    updateFav(\"people\", parseInt(id), person);\n  }\n\n  useEffect(() => {\n    setPerson(findPerson(id));\n  }, [findPerson, id]);\n\n  return (\n    <div>\n      <h2>Person Details {id}</h2>\n      {person && <p>{person.name}</p>}\n      {person && <p>{person.birth_year}</p>}\n      <p>\n        <button onClick={favClicked}>\n          Set <span className=\"material-icons small-font\">favorite</span>\n        </button>\n      </p>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { NavLink, Routes, Route } from \"react-router-dom\";\nimport Person from \"../Person/Person\";\nimport Spinner from \"../Spinner/Spinner\";\nimport { useFav } from \"../../context/FavContext\";\nimport \"./people.css\";\n\nexport default function People(props) {\n  const [fav] = useFav();\n  const { list, setSearchState } = props;\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    setTimeout(setLoaded, 800, true);\n  }, [list]);\n\n  useEffect(() => {\n    setSearchState(false);\n  });\n\n  function findPerson(id) {\n    const found = list.find((item, index) => parseInt(id) === index + 1);\n    if (found) {\n      return found;\n    }\n    return null;\n  }\n  return (\n    <>\n      <div className=\"results\">\n        <h2>People List</h2>\n        {!loaded && <Spinner>Loading...</Spinner>}\n        {list.length === 0 && <p>No people...</p>}\n        {list.length > 0 &&\n          list.map((item, index) => (\n            <p key={item.name}>\n              <NavLink\n                className={({ isActive }) => (isActive ? \"activeLink\" : \"\")}\n                to={`/people/${index + 1}`}\n              >\n                {item.name}&nbsp;\n                {fav.type === \"people\" && index + 1 === parseInt(fav.id) && (\n                  <>\n                    <span className=\"material-icons small-font\">favorite</span>\n                  </>\n                )}\n              </NavLink>\n            </p>\n          ))}\n      </div>\n      <div className=\"details\">\n        <Routes>\n          <Route path=\":id\" element={<Person findPerson={findPerson} />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useFav } from \"../../context/FavContext\";\n\nexport default function Planet({ findPlanet }) {\n  const [planet, setPlanet] = useState(null);\n  const { id } = useParams();\n  const [fav, updateFav] = useFav();\n\n  function favClicked(ev) {\n    if (fav.id === parseInt(id) && fav.type === \"planets\") {\n      //clear fav\n      updateFav(\"\", 0, {});\n      return;\n    }\n    updateFav(\"planets\", parseInt(id), planet);\n  }\n\n  useEffect(() => {\n    setPlanet(findPlanet(id));\n  }, [findPlanet, id]);\n\n  let details = (\n    <>\n      <p>{planet && planet.name}</p>\n      <p>{planet && planet.terrain}</p>\n    </>\n  );\n\n  return (\n    <>\n      <h2>Planet Details</h2>\n      {details}\n      <p>\n        <button onClick={favClicked}>\n          Set <span className=\"material-icons small-font\">favorite</span>\n        </button>\n      </p>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Route, NavLink, Routes } from \"react-router-dom\";\nimport { useFav } from \"../../context/FavContext\";\nimport Planet from \"../Planet/Planet\";\nimport Spinner from \"../Spinner/Spinner\";\nimport \"./planets.css\";\n\nexport default function Planets(props) {\n  const [fav] = useFav();\n  const { list, setSearchState } = props;\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    setTimeout(setLoaded, 800, true);\n  }, [list]);\n\n  useEffect(() => {\n    setSearchState(false);\n  });\n\n  function findPlanet(id) {\n    const found = list.find((item, index) => parseInt(id) === index + 1);\n    if (found) {\n      return found;\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"results\">\n        <h2>Planet List</h2>\n        {!loaded && <Spinner>Loading...</Spinner>}\n        {list.length === 0 && <p>No planets...</p>}\n        {list.length > 0 &&\n          list.map((planet, index) => (\n            <p key={planet.name}>\n              <NavLink\n                className={({ isActive }) => (isActive ? \"activeLink\" : \"\")}\n                to={`/planets/${index + 1}`}\n              >\n                {planet.name}&nbsp;\n                {fav.type === \"planets\" && index + 1 === parseInt(fav.id) && (\n                  <>\n                    <span className=\"material-icons small-font\">favorite</span>\n                  </>\n                )}\n              </NavLink>\n            </p>\n          ))}\n      </div>\n      <div className=\"details\">\n        <Routes>\n          <Route path=\":id\" element={<Planet findPlanet={findPlanet} />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n","import './main.css';\nimport Home from '../Home/Home';\nimport Sub from '../Sub/Sub';\nimport Films from '../Films/Films';\nimport People from '../People/People';\nimport Planets from '../Planets/Planets';\nimport { Route, Routes, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function Main(props) {\n  const { keyword, setSearchState } = props;\n  const { pathname } = useLocation();\n  const [films, setFilms] = useState([]);\n  const [people, setPeople] = useState([]);\n  const [planets, setPlanets] = useState([]);\n\n  useEffect(() => {\n    (async function () {\n      if (pathname !== \"/\") {\n        let url = `https://swapi.dev/api${pathname}`;\n\n        if(keyword.trim() !== \"\") {\n          url += `?search=${keyword}`;\n        }\n\n        axios.get(url)\n          .then(resp => {\n            let data = resp.data;\n            switch (pathname) {\n              case \"/films\":\n                setFilms(data.results);\n                break;\n\n              case \"/people\":\n                setPeople(data.results);\n                break;\n\n              case \"/planets\":\n                setPlanets(data.results);\n                break;\n\n              default:\n                break;\n            }\n          })\n          .catch(console.error)\n      }\n    })();\n  }, [keyword, pathname])\n\n  return (\n    <div className=\"mainContent\">\n      <Routes>\n        <Route path=\"/films/*\" element={<Films list={films} setSearchState={setSearchState} />} />\n        <Route path=\"/people/*\" element={<People list={people} setSearchState={setSearchState} />} />\n        <Route path=\"/planets/*\" element={<Planets list={planets} setSearchState={setSearchState} />} />\n\n        <Route\n          exact\n          path=\"/\"\n          element={<Home name={['C-3PO', 'R2-D2']} active={true} time={new Date() - 50000000} setSearchState={setSearchState}>\n                <Sub />\n                <Sub />\n              </Home>} />\n      </Routes>\n    </div>\n  );\n}\n","import './App.css';\nimport { useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Main from '../Main/Main';\nimport { FavProvider } from '../../context/FavContext';\n\nexport default function App(props) {\n  const name = 'Star Wars API';\n  const [keyword, setKeyword] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n\n  function saveSearch(keyword) {\n    setKeyword(keyword);\n  }\n\n  function setSearchState(state) {\n    setDisabled(state);\n  }\n\n  return (\n    <FavProvider>\n      <div className=\"App\">\n        <Router>\n          <Header company={name} />\n          <SearchBar keyword={keyword} saveSearch={saveSearch} btnState={disabled} />\n\n          <main className=\"content\">\n            <Main keyword={keyword} setSearchState={setSearchState} />\n          </main>\n        </Router>\n      </div>\n    </FavProvider>\n  );\n}\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './components/App/App';\n\nconst root = createRoot(\n  document.getElementById('root')\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}